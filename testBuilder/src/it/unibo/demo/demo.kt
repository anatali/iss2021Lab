
 /* Actor msg-based Generated by AN DISI Unibo */ 
package it.unibo.demo
import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class demo(name: String, scope: CoroutineScope) : ActorBasicFsm( name, scope ){
	override fun getInitialState() : String{
		return "init"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return {
				state("init") {
					action {
						println("demo | STARTS")
						//TODO 
					}
					transition( edgeName="goto",targetState="waitinput", cond=doswitch() )	 
				}
 				state("waitinput") {
					action {
					}
					transition(edgeName="t01",targetState="endOfWork",cond=whenEvent("end"))
					transition(edgeName="t02",targetState="endOfWork",cond=whenTimeout("local_tout_demo_waitinput"))   
				}			
				state("endOfWork") { 
					action { 
						println("demo BYE")
						terminate(0)
					}
				}	 			
			}
 
		}
}
