/* Generated by AN DISI Unibo */ 
package it.unibo.demoactor

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Demoactor ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("demoActor STARTS")
					}
					 transition( edgeName="goto",targetState="s1", cond=doswitch() )
				}	 
				state("s1") { //this:State
					action { //it:State
						println("demo in s1")
					}
					 transition(edgeName="t00",targetState="handleDispatch",cond=whenDispatch("msg1"))
					transition(edgeName="t01",targetState="handleRequest",cond=whenRequest("r1"))
					transition(edgeName="t02",targetState="handleAlarm",cond=whenEvent("alarm"))
				}	 
				state("handleDispatch") { //this:State
					action { //it:State
						println("demo in handleDispatch")
						println("$name in ${currentState.stateName} | $currentMsg")
						if( checkMsgContent( Term.createTerm("msg1(ARG)"), Term.createTerm("msg1(ARG)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								println("demo in s2 since msg1:msg1(${payloadArg(0)})")
								delay(1000) 
						}
					}
					 transition( edgeName="goto",targetState="s1", cond=doswitch() )
				}	 
				state("handleRequest") { //this:State
					action { //it:State
						println("demo in handleRequest")
						println("$name in ${currentState.stateName} | $currentMsg")
					}
					 transition( edgeName="goto",targetState="s1", cond=doswitch() )
				}	 
				state("handleAlarm") { //this:State
					action { //it:State
						println("demo in handleAlarm")
						println("$name in ${currentState.stateName} | $currentMsg")
					}
					 transition( edgeName="goto",targetState="s1", cond=doswitch() )
				}	 
			}
		}
}
