/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package it.unibo.disiBuilderPlugin

import java.io.File
import org.gradle.testkit.runner.GradleRunner
 import kotlin.test.Test
import kotlin.test.assertTrue
import org.junit.Before
/**
 * A simple functional test for the 'unibo.disi.builder' plugin.
 */
class ItUniboDisiBuilderPluginPluginFunctionalTest {
    val projectDir = File("build/functionalTest")
    val runner     = GradleRunner.create()  //org.gradle.testkit.runner.GradleRunner

    @Before
        fun setUp(){
        // Setup the test build
        println(" --------------- Setup the build  ")
        projectDir.mkdirs()
        projectDir.resolve("settings.gradle").writeText("")
        projectDir.resolve("build.gradle").writeText("""
            plugins {
                id('unibo.disi.builder')
            }
        """)
        runner.forwardOutput()
        runner.withPluginClasspath()
        runner.withProjectDir(projectDir)
    }
    @Test fun run_buildDisiTest() {
        // Run the build
         runner.withArguments("buildDisiTest")
         val result = runner.build();

        //result.output is the textual output produced during the build.
        val tasks = result.getTasks()  //List<BuildTask>
        tasks.forEach{ v -> println("task: ${v}")}

        // Verify the result
        assertTrue(result.output.contains("DisiBuilderPlugin | generates the path-name:"))
    }

    @Test fun run_projectInfo() {
        runner.withArguments("projectInfo")
        val result = runner.build();
         // Verify the result
        //val prjName = getProject().getName()
        assertTrue(result.output.contains("projectName" ))

    }

}
